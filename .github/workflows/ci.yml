name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: wandr_test_db
          POSTGRES_USER: wandr_user
          POSTGRES_PASSWORD: wandr_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: development
          push: false
          tags: wandr-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run database migrations
        run: |
          docker run --rm \
            --network host \
            -e DATABASE_URL=postgresql+asyncpg://wandr_user:wandr_password@localhost:5432/wandr_test_db \
            wandr-backend:test \
            alembic upgrade head

      - name: Run tests with coverage
        run: |
          docker run --rm \
            --network host \
            -e DATABASE_URL=sqlite+aiosqlite:///:memory: \
            -e REDIS_URL=redis://localhost:6379/1 \
            -e SECRET_KEY=test-secret-key \
            -e DEBUG=true \
            -v ${{ github.workspace }}:/app \
            wandr-backend:test \
            python -m pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: development
          push: false
          tags: wandr-backend:lint
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run formatting check
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            wandr-backend:lint \
            ruff format --check .

      - name: Run linting
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            wandr-backend:lint \
            ruff check .

      - name: Run type checking
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            wandr-backend:lint \
            mypy .

  security:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
